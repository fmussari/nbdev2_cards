[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "nbdev2_cards demo (And nbdev 2.0 setup)",
    "section": "",
    "text": "With instruction of how I setup the nbdev 2.0 environment."
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "nbdev2_cards demo (And nbdev 2.0 setup)",
    "section": "References",
    "text": "References\n\nYoutube: nbdev tutorial – zero to published project in 90 minutes\nTutorial: nbdev tutorial\nRepo: fastai / nbdev\nFastai forum: Nbdev v2 launched"
  },
  {
    "objectID": "index.html#create-the-environment",
    "href": "index.html#create-the-environment",
    "title": "nbdev2_cards demo (And nbdev 2.0 setup)",
    "section": "Create the environment",
    "text": "Create the environment\nI did it in WSL\n\nTo setup the environment:\n(base) $ mamba create -n nbdev2 python=3.9\n(base) $ mamba activate nbdev2\n(nbdev2) $ mamba install -c anaconda notebook\n(nbdev2) $ mamba install -c fastai nbdev\n\n\nClone a basic github repo:\n(nbdev2) $ git clone git@github.com:fmussari/nbdev2_cards.git\n(nbdev2) $ cd nbdev2_cards\n\n\nCreate the modules\n\n00_cards.ipynb\n01_deck.ipynb\n\n\n\nPublish\nThis commands creates card.py and deck.py\n(nbdev2) $ nbdev_export\n(nbdev2) $ pip install -e ."
  },
  {
    "objectID": "index.html#settings.ini",
    "href": "index.html#settings.ini",
    "title": "nbdev2_cards demo (And nbdev 2.0 setup)",
    "section": "Settings.ini",
    "text": "Settings.ini\nSince the path has underscore, and the library name can’t. Change underscore with dash in lib_name settings.ini and change also the path:\nlib_name = nbdev2-cards\nlib_path = nbdev2_cards"
  },
  {
    "objectID": "index.html#convert-this-file-to-readme.md",
    "href": "index.html#convert-this-file-to-readme.md",
    "title": "nbdev2_cards demo (And nbdev 2.0 setup)",
    "section": "Convert this file to Readme.md",
    "text": "Convert this file to Readme.md\n(nbdev2) $ nbdev_docs"
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "nbdev2_cards demo (And nbdev 2.0 setup)",
    "section": "Install",
    "text": "Install\npip install your_project_name"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "nbdev2_cards demo (And nbdev 2.0 setup)",
    "section": "How to use",
    "text": "How to use\nThis lib provides a Cardclass to create, display and compare playing cards.\n\nCard(1,3)\n\n3♢"
  },
  {
    "objectID": "deck.html",
    "href": "deck.html",
    "title": "module name here",
    "section": "",
    "text": "Deck\n\n Deck ()\n\nA deck of 52 cards, not including jockers\nCreating a deck containing all the cards\n\ndeck = Deck()\ndeck\n\nA♣; 2♣; 3♣; 4♣; 5♣; 6♣; 7♣; 8♣; 9♣; 10♣; J♣; Q♣; K♣; A♢; 2♢; 3♢; 4♢; 5♢; 6♢; 7♢; 8♢; 9♢; 10♢; J♢; Q♢; K♢; A♡; 2♡; 3♡; 4♡; 5♡; 6♡; 7♡; 8♡; 9♡; 10♡; J♡; Q♡; K♡; A♠; 2♠; 3♠; 4♠; 5♠; 6♠; 7♠; 8♠; 9♠; 10♠; J♠; Q♠; K♠\n\n\nThat should be 52 cards\n\ntest_eq(len(deck), 52)\n\nThese are the suits we defined for a Card\n\nsuits\n\n['♣', '♢', '♡', '♠']\n\n\nCheck if A♣ is in deck\n\nCard(1,1) in deck\n\nTrue\n\n\n\n\n\nDeck.pop\n\n Deck.pop (idx:int=-1)\n\nRemove one card from the deck\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nidx\nint\n-1\nThe index of the card to remove, defaulting to last one\n\n\n\n\ndeck = Deck()\ntest_eq(deck.pop(), Card(3, 13)) # K♠\n\nNow 51 cards in the deck\n\ntest_eq(len(deck), 51)\n\n\n\n\nDeck.remove\n\n Deck.remove (card:nbdev2_cards.card.Card)\n\nRemoves card from the deck or raises exception if it is not there\n\n\n\n\nType\nDetails\n\n\n\n\ncard\nCard\nCard to remove\n\n\n\n\ncard23 = Card(2,3)\ndeck.remove(card23)\n\nassert card23 not in deck\n\n\n\n\nDeck.shuffle\n\n Deck.shuffle ()\n\nShuffles the cards in this deck\n\n\n\ndraw_n\n\n draw_n (n:int, replace:bool=True)\n\nDraw n cards, with replacement iif replace\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nn\nint\n\nnumber of cards to draw\n\n\nreplace\nbool\nTrue\nwhether or not draw with replacement"
  },
  {
    "objectID": "card.html",
    "href": "card.html",
    "title": "card – Basic playing card",
    "section": "",
    "text": "We will be using numbers to represent playing card clubs and ranks. These are the suits:\nFor instance the suit at index 0:\nThere are the ranks:\nFor instance the rank at index 1 (note that there isn’t a playing card at position 0, since we want the ranks to match the indicies where possible):\nHere’s an example of creating and displaying a card:\nprinc(c) and c are producing the same output because __repr__=__str__ was set in the class"
  },
  {
    "objectID": "card.html#comparison-operators",
    "href": "card.html#comparison-operators",
    "title": "card – Basic playing card",
    "section": "Comparison Operators",
    "text": "Comparison Operators\nEquality, less than, and greater than work on the rank and suit indices.\nFor instance, here’s a test of equality…\n\n# for this \"def __eq__\" needs to be defined\ntest_eq(Card(suit=1, rank=3), Card(suit=1, rank=3))\n\n…and a test of <…\n\nassert Card(suit=1, rank=2) < Card(suit=2, rank=3)\n\n…and finally of >:\n\nassert not Card(suit=1, rank=2) > Card(suit=2, rank=3)\nassert Card(suit=3, rank=2) > Card(suit=2, rank=3)\n\n\n\nCard\n\n Card (suit:int, rank:int)\n\nA playing card\n\n\n\n\nType\nDetails\n\n\n\n\nsuit\nint\nAn index into suits\n\n\nrank\nint\nAn index into ranks"
  }
]